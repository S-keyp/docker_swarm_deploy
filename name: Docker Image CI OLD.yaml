name: Docker Image CI

on:
    push:
        # branches: ["master"]
    pull_request:
        # branches: ["master"]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ secrets.DOCKER_USERNAME }}/byte-hive
                  tags: |
                      type=ref,event=branch
                      type=sha

            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_API_KEY }}

            - name: Build Byte Hive image
              uses: docker/build-push-action@v6
              with:
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/byte-hive:cache
                  cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/byte-hive:cache,mode=max

    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Login to Docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_API_KEY }}

            - name: Create private key
              run: |
                  mkdir -p ~/.ssh/
                  echo "${{secrets.SSH_PRIVATE_KEY}}" >  ~/.ssh/private.key
                  sudo chmod 600  ~/.ssh/private.key
                  printf "Host github_context
                      HostName 217.182.139.36
                      User githubci
                      Port 50150
                      IdentityFile ~/.ssh/private.key" > ~/.ssh/config
                  printf "${{secrets.SSH_KNOWN_HOSTS}}" > ~/.ssh/known_hosts
              shell: bash

            - name: Create Docker Context
              run: |
                  docker context create github_context --docker "host=ssh://github_context"
                  docker context use github_context

            # allows checkout for only a single file
            - uses: actions/checkout@v4
              with:
                  sparse-checkout: |
                      compose.yml
                  sparse-checkout-cone-mode: false

            - name: Deploy to server
              run: |
                  docker stack deploy --compose-file compose.yml --with-registry-auth --prune byte-hive

            #   env:
            #       SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
            #       SSH_KNOW_HOSTS: ${{secrets.SSH_KNOW_HOSTS}}
            #   SSH_KEY_PATH: ${{ github.workspace }}/../private.key
            #   HOST_NAME: ${{secrets.HOST_NAME}}

            # - name: Create SSH access
            #   run: |
            #       mkdir -p ~/.ssh/
            #       echo "$SSH_PRIVATE_KEY" > ../private.key
            #       sudo chmod 600 ../private.key
            #       echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
            #   shell: bash
            #   env:
            #       SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
            #       SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
            #       SSH_KEY_PATH: ${{ github.workspace }}/../private.key
            #       HOST_NAME: ${{secrets.HOST_NAME}}

            # - name: Create Docker Context
            #   run: |
            #       ssh -i $SSH_KEY_PATH githubci@217.182.139.36
            #       echo "hi from the server"
            #       ls -la
            #   run: |
            #       docker context create mycontext --docker "host=ssh://$DOCKER_HOST"
            #       docker context use mycontext

# Create a github action to deploy to swarm